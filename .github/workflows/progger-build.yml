name: Progger - DMG Build

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Fake tag name'

env:
  PDFIUM_VERSION: "6406"
  PDFIUM_OS: "mac-arm64"

jobs:
  build-dmg:
    env:
      CGO_ENABLED: 1
      LD_LIBRARY_PATH: "/usr/local/lib/pdfium/lib"
      PKG_CONFIG_PATH: "/usr/local/lib/pkgconfig"
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.work'
          cache-dependency-path: go.work.sum
      - name: Setup Golang caches
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: "${{ runner.os }}-golang-${{ hashFiles('go.work.sum') }}"
          restore-keys: |
            ${{ runner.os }}-golang-
      - name: Install fyne
        run: go install fyne.io/fyne/v2/cmd/fyne@latest
      - name: Set up PDFium library
        run: |
          curl -L https://github.com/bblanchon/pdfium-binaries/releases/download/chromium%2F${{ env.PDFIUM_VERSION }}/pdfium-${{ env.PDFIUM_OS }}.tgz -o pdfium-${{ env.PDFIUM_OS }}.tgz
          sudo mkdir -p /usr/local/lib/pdfium
          sudo mkdir -p /usr/local/lib/pkgconfig
          sudo tar -C /usr/local/lib/pdfium -xvf pdfium-${{ env.PDFIUM_OS }}.tgz
          rm pdfium-${{ env.PDFIUM_OS }}.tgz
          sudo cp ./.github/workflows/pdfium.pc /usr/local/lib/pkgconfig/pdfium.pc
          echo "Done"
      - name: Build progger binary
        run: |
          cd build/package/exporter
          go build -o progger ../../../exporter/cmd/exporter.go
          fyne package -os darwin --exe progger --name progger --icon Icon.png
          mkdir progger.app/Contents/Frameworks
          cp /usr/local/lib/pdfium/lib/libpdfium.dylib progger.app/Contents/Frameworks
          install_name_tool -id "@rpath/libpdfium.dylib" progger.app/Contents/Frameworks/libpdfium.dylib
          install_name_tool -change ./libpdfium.dylib "@loader_path/../Frameworks/libpdfium.dylib" progger.app/Contents/MacOS/progger
          install_name_tool -add_rpath "@loader_path/../Frameworks/" progger.app/Contents/MacOS/progger
      - name: Install create-dmg
        run: |
          brew install create-dmg
      - name: Build dmg
        run: |
          create-dmg \
            --icon-size 80 \
            --icon "Progger.app" 125 175 \
            --window-size 500 320 \
            --app-drop-link 375 175 \
            progger-${{ github.ref_name }}.dmg ./build/package/exporter/progger.app/

      - uses: actions/upload-artifact@v4
        with:
          name: progger-dmg-${{ runner.os }}-${{ github.ref_name }}-${{ github.sha }}
          path: progger-${{ github.ref_name }}.dmg
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: progger-${{ github.ref_name }}.dmg
          prerelease: ${{ contains(github.ref, 'rc') }}
#      - name: Start SSH session
#        if: failure()
#        uses: luchihoratiu/debug-via-ssh@main
#        with:
#          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
#          SSH_PASS: ${{ secrets.SSH_PASS }}